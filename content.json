{"pages":[{"title":"About me","text":"Who I am Coder Sharer Founder What I do Android Miniapp Consensus Where I go Shared economy Mobile internet Smart ecarhome","link":"/about/index.html"}],"posts":[{"title":"Android Keystore Note","text":"Android developers use keystore to complie, debug and release APK files. You have debug key in debugging phase, and release key in release phase. Here is some notes for keystore. about keystore A digital certificate contains the public key of a public/private key pair, as well as some other metadata identifying the owner (for example, name and location) who holds the corresponding private key. When signing your app, the signing tool attaches the certificate to your app, as fingerprint which associates the APK to your corresponding private key. This helps Android ensure the original author of the app. This key is called the signing key, CAN NOT be changed, so be careful to save it. Keystore is a binary file that serves as a repository of certificates and private keys. create keystore Android Studio will create a new in $HOME/.android/debug.keystore when first packaging apk. But app store doesn’t accept the apk signed by a debug keystore. Create a new for publishing:keytool -genkey -v -keystore dengcb.keystore -keyalg RSA -keysize 2048 -validity 11029 -alias dengcb detail keystore view detail in keystore:keytool -list -v -keystore dengcb.keystore modify keystore export certificate:keytool -export -alias dengcb -keystore dengcb.keystore -file ~/dengcb.crt import certificate:keytool -import -alias dengcb -keystore dengcb.keystore -file ~/dengcb.crt delete certificate:keytool -delete -alias dengcb -keystore dengcb.keystore print certificate:keytool -printcert -file ~/dengcb.crt replace debug keystore Why do this？Boring!Just kidding! Some third-party libraries verify the signed certificate of app in server side. If you use debug certificate to test app, will receive signed error, unless you sign with release certificate every time. Are you kidding me? So modifying your release certificate just like a debug certificate is a good idea. But, please keep this modified DEBUG certificate safe, don’t leak it! default debug.keystore detail:Keystore name: “debug.keystore”Keystore password: “android”Key alias: “androiddebugkey”Key password: “android”CN: “CN=Android Debug,O=Android,C=US” rename dengcb.keystore todebug.keystore modify keystore password:keytool -storepasswd -keystore debug.keystore -new android modify key alias and password:keytool -changealias -keystore debug.keystore -alias dengcb -destalias androiddebugkey -destkeypass android replace~/.android/debug.keystore","link":"/android-keystore-note/"},{"title":"Bring You to IPFS","text":"Last post, I use Hexo with Minos to build a full site multi-language blog, it’s exciting! So in this post, I will tell you how to bring the new blog to IPFS. What is IPFSIPFS is called for short of InterPlanetary FileSystem, maybe you can visit your data from another galaxy. Due to the limit speed of light, we need quantum entanglement communication to play well. dengcbWelcome to my GitHub IPFS uses data hash address instead of website domain, but in the next, you will find if you want to visit your data in IPFS within a traditional website, you still need domain. And to get hash data, you have to visit a IPFS node server. So, want to decentralize, you maybe need a centralized server first. Meanwhile, distributed data storage will cause waste. Some updated files, previous versions are no longer valid, but are pinned and permanently retained inside IPFS and cannot be deleted. Even the owner has forgotten the previous data hash, the dead files become ghosts in the IPFS system. Install IPFS Download latest release Open Official Site, click Download IPFS for your platform Choose the binary for your platform, download and unzip Install IPFS package Such as MacOS, enter go-ipfs, and execute ./install.sh If permission denied, add sudo, then copy the ipfs file into path Execute ipfs help to test installed Initialize the node Execute ipfs init, init the folder .ipfs and create config files Keep the peer identity, or find it in ~/.ipfs/config Modify config file, set the storage space vi ~/.ipfs/config &quot;Datastore&quot;: { &quot;StorageMax&quot;: &quot;6GB&quot; } Start the daemon Execute ipfs daemon &gt; ipfs.log &amp;, start daemon as background process Execute ps ax|grep ipfs, check the daemon alive Publish to IPFS Build hexo site Please read my last post Hexo multi-language with Minos Copy the public folder to IPFS node server Add to IPFS Execute ipfs add -r public to add public folder to IPFS Keep the public hash Persistent storage ipfs pin add -r QmUmVuqD8RdLjeuqKZC8dAaKkcRedPsGtDFbwPyKrR278K added QmUmVuqD8RdLjeuqKZC8dAaKkcRedPsGtDFbwPyKrR278K public Visit https://ipfs.io/ipfs/QmUmVuqD8RdLjeuqKZC8dAaKkcRedPsGtDFbwPyKrR278K directly Name publish Execute below, bind node name with public folder hash ipfs name publish QmUmVuqD8RdLjeuqKZC8dAaKkcRedPsGtDFbwPyKrR278K Bind success, the name is the peer when node init Published to Qmdn4vrHjbmsQvHPXAiJvWFHQRqGd5fP33HJqd9AE4EjMH: /ipfs/QmUmVuqD8RdLjeuqKZC8dAaKkcRedPsGtDFbwPyKrR278K Visit https://ipfs.io/ipns/Qmdn4vrHjbmsQvHPXAiJvWFHQRqGd5fP33HJqd9AE4EjMH namely Note: name is fixed, hash is changed, so bind name just like stable IP address Config domain Register domainJust go Godaddy or other domainer Change DNS ServerNow, please use CloudFlare, for some reason: Free DNS Free https, dynamic and security Free IPFS gateway Please set DNS Server as dahlia.ns.cloudflare.comsid.ns.cloudflare.com Add DNS record DNS, add CNAME record, set as cloudflare-ipfs.com DNS, add TXT record _dnslink, use ipfs node name dnslink=/ipns/Qmdn4vrHjbmsQvHPXAiJvWFHQRqGd5fP33HJqd9AE4EjMH Apply ssl certificateinput your domain Wait for DNS effect Setup Gateway If you want to build your own gateway, go on (not necessary) Install Nginx apt install nginx-full Config Nginx vi /etc/nginx/sites-available/example_com 123456789101112131415161718192021upstream ipfs-server &#123; server 127.0.0.1:8080;&#125;map $http_upgrade $connection_upgrade &#123; default upgrade; '' close;&#125;server &#123; listen 80; server_name example.com; location / &#123; proxy_set_header X-Real-IP $remote_addr; proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; proxy_set_header Host $http_host; proxy_set_header X-NginX-Proxy true; proxy_pass http://ipfs-server/; &#125;&#125; execute nsite -e service nginx reload User ExperienceThis site’s cloning uses the IPFS, you can try. The actual feeling, is different from we thought before. The first open takes a long time, always 504 timeout, but once connection is success, open will be very quick. Why? The IPFS official admits this is caused by the IPNS service bugs. We published name in the past, so we don’t need modify DNS while change files. However, ipns service is very time-consuming and takes more than 20 seconds often. Meanwhile, ipfs is almost second. IPFS Officle website content is fixed, so hash address doesn’t change, using ipfs and open fast. If, IPFS cannot enhance the speed of ipns service, first open meets 504 always, who can wait?","link":"/bring-you-to-ipfs/"},{"title":"Edit Hexo with VSCode","text":"What’s your favorite editor for hexo? Powerful edit function? Amazing preview effect? Saving your code anytime? This post show you how to write your hexo with Visual Studio Code. What’s VSCode VSCode is Visual Studio Code, belong to Microsoft. The preferred lightweight development tool for many coders, it’s hot. First, I was finding an editor for html. I think the markdown file is easy, neither compiling nor debugging. So, I tried UltraEdit and HexoEditor. The experience is terrible, I can’t satisfy completely. Installed the Markdown Preview Enhanced extension, customize the css and quote styles to make your Hexo preview as consistent as release. That’s very attractive. Install MPE extension search Markdown Preview Enhanced in VSCode, and install MPE Preview: cmd+k v Import Hexo theme style Open css:cmd-shift-p, runMarkdown Preview Enhanced: Customize Css or edit~/.mume/style.less such as Minos theme: 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657.markdown-preview.markdown-preview &#123; h2 &#123; font-size: 20px; &#125; h3 &#123; font-size: 18px; &#125; p &#123; font-size: 14px; &#125; table &#123; font-size: 14px; &#125; code &#123; color: #ff3860; background-color: #f5f5f5; &#125; a &#123; color: black; text-decoration:underline &#125; pre &#123; overflow: auto; margin: 20px 0px; padding: 1px,1px; font-size: 14px; background: #f3f3f3; line-height: 1.6; &#125; blockquote &#123; background-color: #f5f5f5; border-left: 4px solid #dbdbdb; padding: 16px 24px; &#125; blockquote.colorquote.info &#123; border-color: #209cee; background-color: #def0fd; &#125; blockquote.colorquote.success &#123; border-color: #23d160; background-color: #cbf6da; &#125; blockquote.colorquote.warning &#123; border-color: #ffdd57; background-color: #fff6d1; &#125; blockquote.colorquote.danger &#123; border-color: #ff3860; background-color: #ffb3c2; &#125; h1, h2, h3, h4, h5, h6, blockquote, p &#123; font-family: \"Ovo\", \"Georgia\", \"STZhongsong\", \"Microsoft YaHei\", serif; &#125; code, pre &#123; font-family: \"Source Code Pro\", monospace, \"Microsoft YaHei\"; &#125;&#125; edit~/.mume/parser.js 123456789101112131415161718192021222324252627module.exports = &#123; onWillParseMarkdown: function(markdown) &#123; return new Promise((resolve, reject)=&gt; &#123; //quote Parser var quotePatt = /&#123;%\\s*colorquote .+?\\s*%&#125;\\n.+?\\n&#123;%\\s*endcolorquote\\s*%&#125;/g; var quoteResult; var quoteContent; while((quoteResult = quotePatt.exec(markdown)) != null)&#123; quoteContent = quoteResult[0]; typePatt=/info|success|warning|danger/g; typeResult = typePatt.exec(quoteContent); typeContent = typeResult[0]; reg = new RegExp(\"&#123;%\\\\s*colorquote \" + typeContent + \"\\\\s*%&#125;\",\"g\"); quoteContent = quoteContent.replace(reg,\"\"); quoteContent = quoteContent.replace(/&#123;%\\s*endcolorquote\\s*%&#125;/,\"\"); markdown = markdown.replace(quoteResult, \"&lt;blockquote class='colorquote \"+typeContent+\"'&gt;\"+quoteContent+\"&lt;/blockquote&gt;\"); &#125; return resolve(markdown) &#125;) &#125;, onDidParseMarkdown: function(html) &#123; return new Promise((resolve, reject)=&gt; &#123; return resolve(html) &#125;) &#125;&#125;","link":"/edit-hexo-with-vscode/"},{"title":"Hello, world!","text":"Let’s begin~","link":"/hello-world/"},{"title":"Migrate LDAP server","text":"LDAP is a tree query system, mainly used for member management. Query more than modification, so always stable. Leave this post here to help your migration. Install install OPENLDAP in new serverapt install slapd ldap-utils php-ldap phpldapadmin search Suffix in old serverslapcat -b cn=config | grep &quot;^dn: olcDatabase=\\|^olcSuffix&quot; Backup backup configslapcat -b cn=config -l config.ldif backup databaseslapcat -b dc=dengcb,dc=com -l dengcb.ldif Migrate restore config 12345cd /etc/ldapcp -a slapd.d slapd.d.bakrm -rf slapd.d/*slapadd -F slapd.d -b cn=config -l config.ldifchown -R openldap.openldap slapd.d restore database 12345678slapcat -b cn=config | grep &quot;^dn: olcDatabase=\\|^olcSuffix\\|^olcDbDirectory&quot;cd /var/libcp -a ldap ldap.bakrm -f ldap/*cd /etc/ldapslapadd -F slapd.d -b dc=dengcb,dc=com -l dengcb.ldifchown openldap.openldap /var/lib/ldap/*/etc/init.d/slapd restart Modify if get error in php7, download the modifiedreplace /usr/share/phpldapadmin modify the configvi /usr/share/phpldapadmin/config/config.php","link":"/migrate-ldap/"},{"title":"Hexo multi-language with Minos","text":"I want to build a hexo blog with full site multi-language, search a lot and try, but no one perfect. Today it’s done, finally I can white down a tutorial for your reference. What I seek Full Site Multi-language Choose English as the default language, and translate full site into your native language, all items one to one correspondence. dengcbWelcome to my GitHub Why use Minos Hexo hasn’t multi-language kernel, though you can install official i18n plugin, but only get some translated shell, all the content in different languages still mix together. Minos is a simple and powerful theme, and support the multi-language thoroughly with lastest release. How I tryPassing Pit Official i18n PluginSet i18n_dir: :lang in _config.yml, you can generate an i18n slug, just that. All multilingual posts still mix. Note: the setting also needs in Minos. hexo-generator-i18nThis plugin can get multilingual pages, but not posts or tags, because hexo kernel doesn’t support. hexo-multilingual and its generatorThis is a real plugin that changes the kernel, you should uninstall all official generators first. But the author is too busy to fix some issues. And this plugin always start ‘en’ in default slug. Other TricksSuch as build two sites and different route; or rewrite the core code. I think it’s not what I want, drop it. Meeting MinosView a lot of themes, choose Minos at last, not the popular NEXT theme. Because I want the classical website to be less colorful, less drawing, just words or ascii codes. So Minos wins. I hope more hexor can choose Minos like me. When using Minos at first, it doesn’t support multi-language yet. Its 1.0 version has been released more than 2 years. Author just want to update to 2.0, and plan to support i18n fully. I test this days and feedback some issues, the latest release finally achieve the full site multi-language support today (post、page、archive、category、tag、search、switcher etc.). Now I can tell you how I build site with Minos. Convention best What we needIs variety needs, or simple to use. If former, the full site multi-language still needs time, Minos is not the silver bullet. If later, congratulations, you can do it today with least configurations. Such as, you set config to: permalink: :category/:title/, then slug as: /nothing/zh-cn/hello-world/, that’s the conflict between convention and configuration. Let’s agree Use default config, try not to whim 12345678910language: - en - zh-cnpermalink: :title/i18n_dir: :langnew_post_name: :title.mdcategory_map: 无他: nothingtag_map: 随笔: anything Install minimal plugins, less is better 12345678910111213141516171819202122&#123; \"name\": \"dengcb.github.io\", \"version\": \"1.0.0\", \"private\": true, \"hexo\": &#123; \"version\": \"3.8.0\" &#125;, \"dependencies\": &#123; \"hexo\": \"^3.8.0\", \"hexo-deployer-git\": \"^0.3.1\", \"hexo-generator-archive\": \"^0.1.5\", \"hexo-generator-category\": \"^0.1.3\", \"hexo-generator-index\": \"^0.2.1\", \"hexo-generator-tag\": \"^0.2.0\", \"hexo-pagination\": \"^0.1.0\", \"hexo-renderer-ejs\": \"^0.3.1\", \"hexo-renderer-marked\": \"^0.3.2\", \"hexo-renderer-sass\": \"^0.3.2\", \"hexo-renderer-stylus\": \"^0.3.3\", \"hexo-server\": \"^0.3.3\" &#125;&#125; Install Minos from root git clone https://github.com/ppoffice/hexo-theme-minos.git themes/minos at themes/minos, new 3 config files _config.yml _config.en.yml _config.zh-cn.yml in _config.zh-cn.yml, set site name and menu 123456789# Sitetitle: 长斌# Menumenu: 归档: /zh-cn/archives 分类: /zh-cn/categories 标签: /zh-cn/tags 关于: /zh-cn/about Create posts, and follow the structure 1234567891011_post/ hello-world.md zh-cn/ hello-world.mdabout/ index.mdzh-cn/ about/ index.mdCNAMEfavicon.png Copy post to source/_post/&lt;lang&gt;/ Copy page tosource/&lt;lang&gt;/ That’s the Convention best, create the structure, then generate full site multi-language, done. Generate, Test, Deploy, enjoy it! 1234hexo cleanhexo ghexo s -shexo d Thanks Special Minos author ppoffice who designed and coded Minos such excellent theme. After I feedback, he continues to code and modify, realize all ideals I have set for hexo theme. Next, I will post a blog how send the site to IPFS system.","link":"/hexo-minos-multi-language/"},{"title":"Migrate MySQL server","text":"MySQL is the most popular open source database system, used by everyone, and is already standard. Record the migration of one database here for search and share. Install install MySQL in new serverapt install mysql-server-5.7 php7.2-mysql install phpmyadmin in new server open official download download latest zip package unzip to /usr/share/phpmyadmin Modify modify MySQL configvi /etc/mysql/mysql.conf.d/mysql.cnf modify phpmyadmin confighttps://db.yourdomain.com/setupsave as/usr/share/phpmyadmin/config.inc.php modify root passwordMySQL 5.7 root has no password initiallyset password for &#39;root&#39;@&#39;localhost&#39; = password(&#39;123&#39;); login with phpmyadminif failed with Access denied for user &#39;root&#39;@&#39;localhost&#39;change root login methodupdate mysql.user set plugin = &#39;mysql_native_password&#39; where user = &#39;root&#39;; flush every time changedflush privileges; Backup backup database1mysqldump -uroot -p mydb | bzip2 &gt; /opt/bak/db_mydb_`date +%y_%m_%d`.bz2 Migrate restore database1234bzip2 -d db_mydb.bz2mysql -uroot -puse mydbsource /opt/bak/db_mydb","link":"/migrate-mysql/"},{"title":"Migrate Redis server","text":"Redis is the most popular memory database system, enhance your site just like fly in sky by using it. Redis is easy to config, and record something to someone need it. Install install Redis in new serverapt install redis-server php-redis install phpRedisAdmin in new server open GitHub site clone latest to /usr/share/phpredisadmin Config modify Redis configvi /etc/redis/redis.conf modify Nginx config install apache2 utils, generate htpasswd 12apt install apache2-utilshtpasswd -c /etc/phpreadmin/htpasswd admin encrypt phpRedisAdmin website login 12345location / &#123; auth_basic \"Dengcb Redis Admin\"; auth_basic_user_file /etc/phpreadmin/htpasswd; try_files $uri $uri/ /index.php?$args;&#125; modify php config 123[Session]session.save_handler = redissession.save_path = \"unix:///var/run/redis/redis-server.sock?persistent=1&amp;weight=1\"","link":"/migrate-redis/"},{"title":"Migrate Redmine and Gitlab","text":"Redmine and Gitlab are great project and code management systems, both based on Ruby on Rails, so I migrate them together and record Rails migration notes here. Install Rails install RVM in new server 12345gpg2 --keyserver hkp://pgp.mit.edu --recv-keys 409B6B1796C275462A1703113804BB82D39DC0E3 7D2BAF1CF37B13E2069D6956105BD0E739499BDB\\curl -sSL https://get.rvm.io | bash -s stablesource ~/.bashrcsource ~/.bash_profilervm -v install Ruby in new server 123456rvm list knownrvm install 2.6.0 --disable-binaryrvm use 2.6.0 --defaultrvm listrvm remove 1.8.7ruby -v create new Gemset 1234567891011rvm use 2.6.0rvm gemset create rails522rvm gemset listrvm use 2.6.0@rails522gem -vgem install bundlergem install rails -v 5.2.2gem install thin -v 1.7.2bundle -vrails -vthin -v Migrate Redmine install dev package needed 12apt install libmysqlclient-devapt install imagemagick libmagickcore-dev libmagickwand-dev if libjbig0 error in 18.04, download right versiondpkg -i libjbig0_2.1-3.1build1_amd64.deb modify thin config 12thin installvi /etc/thin/redmine.yml ---chdir: /var/www/artec/mineenvironment: productionaddress: 0.0.0.0port: 3000timeout: 30log: log/thin.logpid: tmp/pids/thin.pidmax_conns: 1024max_persistent_conns: 512require: []wait: 30servers: 5daemonize: true migrate Redmine download latest migrate config 12cp config/database.yml ./configcp config/configuration.yml ./config migrate files and theme 12cp -r files ./cp -r public/themes/dengcb public/themes install gems, Gemfile add gem &quot;thin&quot;, &quot;~&gt; 1.7.2&quot; 123456bundle install --without development testbundle exec rake generate_secret_tokenbundle exec rake db:migrate RAILS_ENV=productionbundle exec rake tmp:cache:clear RAILS_ENV=productionchown -R www-data.www-data */etc/init.d/thin start Migrate Gitlab install dependency package install nodejs 12345cd ~curl -sL https://deb.nodesource.com/setup_10.x -o nodesource_setup.shbash nodesource_setup.shapt install nodejsnode -v install yarn 12345curl --silent --show-error https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add -echo &quot;deb https://dl.yarnpkg.com/debian/ stable main&quot; | tee /etc/apt/sources.list.d/yarn.listapt updateapt install yarnyarn -v install go 12apt install golanggo version install others12apt install graphicsmagickapt install postfix Upgrade System upgrade Gitlab 123456su git -lcd ~/gitlabgit fetch --all --prunegit checkout -- db/schema.rbgit checkout -- localegit checkout 11-8-stable upgrade gitlab-shell 1234cd ~/gitlab-shellgit fetch --all --tags --prunegit checkout v$(&lt;/home/git/gitlab/GITLAB_SHELL_VERSION)bin/compile upgrade gitlab-workhorse 1234cd ~/gitlab-workhorsegit fetch --all --tags --prunegit checkout v$(&lt;/home/git/gitlab/GITLAB_WORKHORSE_VERSION)make upgrade Gitaly 12345sed -i.pre-10.1 &apos;s/\\[\\[storages\\]\\]/[[storage]]/&apos; /home/git/gitaly/config.tomlcd ~/gitalygit fetch --all --tags --prunegit checkout v$(&lt;/home/git/gitlab/GITALY_SERVER_VERSION)make upgrade gitlab-pages 1234cd ~/gitlab-pagesgit fetch --all --tags --prunegit checkout v$(&lt;/home/git/gitlab/GITLAB_PAGES_VERSION)make Update config update gitlab.yml 1git diff origin/11-7-stable:config/gitlab.yml.example origin/11-8-stable:config/gitlab.yml.example update script 12345cp lib/support/init.d/gitlab /etc/init.d/gitlabcp lib/support/init.d/gitlab.default.example /etc/default/gitlabupdate-rc.d gitlab defaults 21cp lib/support/logrotate/gitlab /etc/logrotate.d/gitlabsystemctl daemon-reload start migration 12345678su git -lcd /home/git/gitlabbundle install --deployment --without development test postgres aws kerberosbundle cleanbundle exec rake db:migrate RAILS_ENV=productionbundle exec rake gettext:compile RAILS_ENV=productionbundle exec rake yarn:install gitlab:assets:clean gitlab:assets:compile RAILS_ENV=production NODE_ENV=productionbundle exec rake cache:clear RAILS_ENV=production start checking 12345service gitlab startservice nginx restartcd /home/git/gitlabbundle exec rake gitlab:env:info RAILS_ENV=productionbundle exec rake gitlab:check RAILS_ENV=production additional fix gnutls_handshake error with git 12345678910apt install build-essential fakeroot dpkg-dev libcurl4-openssl-devapt build-dep gitmkdir ~/git-opensslcd ~/git-opensslapt source gitdpkg-source -x git_2.17.1-1.dsccd git-2.17.1vi debian/control //replace libcurl4-gnutls-dev with libcurl4-openssl-devdpkg-buildpackage -rfakeroot -b //if fail on test, comment TEST=test in debian/rulesdpkg -i ../git_2.17.1-1ubuntu0.4_amd64.deb fix JavaScript heap out of memory with nodejs 1node --max-old-space-size=4096 /home/git/gitlab/config/webpack.config.js fix Rails conflict of Redmine and Gitlabrvm use 2.5.3 --defaultvi /usr/local/rvm/bin/bootup_thin 1234567891011#!/usr/bin/env bashif [[ -s \"/usr/local/rvm/gems/ruby-2.6.0/environment\" ]]then source \"/usr/local/rvm/gems/ruby-2.6.0/environment\" exec thin \"$@\"else echo \"ERROR: Missing RVM environment file: '/usr/local/rvm/gems/ruby-2.6.0/environment'\" &gt;&amp;2 exit 1fi vi /etc/init.d/thin 1234...#DAEMON=/usr/local/rvm/gems/ruby-2.6.0@rails522/bin/thinDAEMON=/usr/local/rvm/bin/bootup_thin...","link":"/migrate-redmine-and-gitlab/"},{"title":"Use iTerm2 to telnet SMTH bbs","text":"When you try BBS in macOS, it sucks! Someone uses welly, but I always use iTerm2 to ssh servers. Today I’ll show you how to telnet SMTH BBS with iTerm2. Prepare Upgrade to 10.13.1, telnet disapeared, try executebrew install telnetInstall telnet to /usr/local/bin ConfigOpen Preferences-&gt;Profiles in General Click +, add a new Profile, clone Default’s config Change Name, such as SMTH Add a Shortcut key, such as ^⌘S Add Command, as /usr/local/bin/telnet newsmth.net in Text Check Treat ambiguous-width characters as double-width Click Change Font to set right size, don’t change font Character Spacing, set Horizontal as 90%, Vertical as 80% in Terminal Character Encoding choose Chinese(GBK) in Session Check When idle, send ASCII code in Keys Click +, Shortcut: Home (fn + arrow right), Action: Send Escape Sequence, [1~ Click +, Shortcut: End (fn + arrow left), Action: Send Escape Sequence, [4~ Done, happy your SMTH life!","link":"/use-iterm2-telnet-smth-bbs/"},{"title":"Right Way to Open GitHub","text":"Today, I use GitHub for almost one month. The more you use, the more you get, just one word: Cool! Nice can’t be hidden, just share it! Even using too short to know more, we can share it with going. GitHub Git is Linus‘s spare time works. 2005, when free version of BitKeeper, a commercial version control tool, timeout，how could Linux team pay for it? So Linus coded one, Git, brought version control tool directly to modernization. Git is very high, normally is hard to learn, just like me, always use Git as SVN. But it’s the right time, the power of community broke out, 2008, Ruby men talked about it in Bar, and GitHub was born. Desktop General users, just like me, better use GitHub Desktop. Command line is cool, but it’s too heavy to life. Pages Look Hexo multi-language with Minos, GitHub gives you free static space to build blog or documents.Now you can use your custom domain with https, 👍Conscience business! GitBook This project moves on fast, and the version I saw earlier has evolved again.You can put e-books inside and write your own api documents. Sub Module If your project uses someone’s project, then you can build a pointergit submodule add your_submodule_urlIf you clone to localgit clone your_project_url --recursiveIf you updategit submodule update Private Repository New year, good news.GitHub under Microsoft free the private repository to all personal users. Follow, Watch, Star, Fork Follow: like someone, follow his, catch every moveWatch: like something, subscrible it, listen any changeStar: praise something, encourage it, but not listen itFork: clone Dolly, modify, and pull request","link":"/right-way-to-open-github/"}],"tags":[{"name":"tutorial","slug":"tutorial","link":"/tags/tutorial/"},{"name":"anything","slug":"anything","link":"/tags/anything/"}],"categories":[{"name":"coding","slug":"coding","link":"/categories/coding/"},{"name":"web","slug":"web","link":"/categories/web/"},{"name":"other","slug":"other","link":"/categories/other/"},{"name":"android","slug":"coding/android","link":"/categories/coding/android/"},{"name":"maintain","slug":"maintain","link":"/categories/maintain/"},{"name":"hexo","slug":"web/hexo","link":"/categories/web/hexo/"},{"name":"ipfs","slug":"web/ipfs","link":"/categories/web/ipfs/"},{"name":"iterm","slug":"web/iterm","link":"/categories/web/iterm/"},{"name":"nothing","slug":"other/nothing","link":"/categories/other/nothing/"},{"name":"github","slug":"coding/github","link":"/categories/coding/github/"},{"name":"ldap","slug":"maintain/ldap","link":"/categories/maintain/ldap/"},{"name":"mysql","slug":"maintain/mysql","link":"/categories/maintain/mysql/"},{"name":"redis","slug":"maintain/redis","link":"/categories/maintain/redis/"},{"name":"rails","slug":"maintain/rails","link":"/categories/maintain/rails/"}]}