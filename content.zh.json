{"pages":[{"title":"关于我","text":"我是谁 码农 分享者 创业狗 我会啥 安卓开发 微信小程序 共识算法 我做啥 分享经济 移动互联 智能电车","link":"/zh/about/index.html"}],"posts":[{"title":"带你去星际","text":"这年头，不搞点云计算分布式大数据区块链，就没法和人正常交流了。在上一篇，实现了Hexo的全站双语，兴奋之余，不妨再进一步，让你飞，带你去星际。 准备工作这一章，在英文页面里是不存在的 任何去中心化的东东，都是要反对要消灭的，所以对个人而言，首先需要具备科学上网的能力。如果连这个基础都不具备，下面的内容就不需要再看了，星际系统网站已被墙，你是访问不了的。 注：本站不提供科学上网教程，也是为了你不用科学上网就能访问本站，见谅！ 何为星际星际文件系统（InterPlanetary FileSystem），简称星际。突然间，一口霸气涌上心头，这已经把未来第一次接触后的宇宙合作考虑进去了。的确，咱地球有这么多好片，怎能光顾着自己享受呢？就是不知量子纠缠通信什么时候普及，否则两颗星球之间共享个片，浩叹会耗费多少光年。 长斌欢迎访问我的GitHub主页 星际使用内容寻址代替域名寻址，但是后面章节可以看见，要用传统方式访问星际系统里的网站文件，还是离不开域名配置。而去获取内容哈希得到的地址，也要访问星际节点服务器。某种意义上，去中心化文件存储的起点，还是离不开中心化的服务器。 而分布式的数据存储，必然造成浪费。有些持续升级的文件，之前存储的内容不再有效，使用pin后却永久保留在星际内部，无法剔除。甚至连文件的主人都没有保留之前的内容地址，死文件成了游荡在星际系统里的孤魂野鬼。 安装星际 下载最新安装包 打开 官方网站，点击 Download IPFS for your platform 选择对应自己操作系统的压缩包，下载，解压缩 安装星际系统 以MacOS为例，进入 go-ipfs 目录，输入 ./install.sh 权限不够请在前面加 sudo，其实就是把可执行文件拷贝至运行路径里 输入命令 ipfs help 测试安装是否成功 创建星际节点 输入命令 ipfs init，初始化会在用户目录下生成 .ipfs 目录和配置文件 把生成的 peer identity 拷贝留用，或者在 ~/.ipfs/config 里可见 修改配置，选择合适自己的存储空间容量 vi ~/.ipfs/config &quot;Datastore&quot;: { &quot;StorageMax&quot;: &quot;6GB&quot; } 开启守护进程 输入命令 ipfs daemon &gt; ipfs.log &amp;，以后台进程方式启动守护进程 输入命令 ps ax|grep ipfs，检查守护进程是否启动成功 注：想要和星际网络连接，需要全局科学上网，甚至最好在墙外操作 发布网站 准备Hexo文件 请参考我上一篇文章 用Minos搭建Hexo全站多语言站点 将生成的public目录拷贝至刚才生成星际节点的服务器 发布至星际 输入命令 ipfs add -r public 将public目录发布至星际 将public目录生成的哈希拷贝留用 持久保存 ipfs pin add -r QmUmVuqD8RdLjeuqKZC8dAaKkcRedPsGtDFbwPyKrR278K added QmUmVuqD8RdLjeuqKZC8dAaKkcRedPsGtDFbwPyKrR278K public 可以通过https://ipfs.io/ipfs/QmUmVuqD8RdLjeuqKZC8dAaKkcRedPsGtDFbwPyKrR278K 直接访问 绑定代名 输入命令，将public目录哈希值绑定当前节点代名 ipfs name publish QmUmVuqD8RdLjeuqKZC8dAaKkcRedPsGtDFbwPyKrR278K 绑定成功，该代名就是在上一章init时生成的peer值 Published to Qmdn4vrHjbmsQvHPXAiJvWFHQRqGd5fP33HJqd9AE4EjMH: /ipfs/QmUmVuqD8RdLjeuqKZC8dAaKkcRedPsGtDFbwPyKrR278K 可以通过https://ipfs.io/ipns/Qmdn4vrHjbmsQvHPXAiJvWFHQRqGd5fP33HJqd9AE4EjMH 代名访问 注：代名是不变的，文件哈希一直在变，所以绑定代名，才能在传统域名里解析，代名就是星际系统里的固定IP 配置域名 获取域名可以前往 Godaddy或各大域名商处注册 修改DNS Server这里，推荐使用 CloudFlare 作为域名解析商，原因是： 免费解析 免费支持https，加密传输更快（天朝你懂的） 官方支持ipfs域名解析 将DNS Server改成下列即可 dahlia.ns.cloudflare.comsid.ns.cloudflare.com 修改解析 DNS菜单，添加CNAME记录，指向cloudflare-ipfs.com DNS菜单，添加TXT记录_dnslink，使用刚刚的代名 dnslink=/ipns/Qmdn4vrHjbmsQvHPXAiJvWFHQRqGd5fP33HJqd9AE4EjMH 申请数字证书网址输入域名 静静等待 搭建网关 希望提供自己gateway服务的，再参考下面步骤（非必须） 安装Nginx apt install nginx-full 配置Nginx vi /etc/nginx/sites-available/example_com 123456789101112131415161718192021upstream ipfs-server &#123; server 127.0.0.1:8080;&#125;map $http_upgrade $connection_upgrade &#123; default upgrade; '' close;&#125;server &#123; listen 80; server_name example.com; location / &#123; proxy_set_header X-Real-IP $remote_addr; proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; proxy_set_header Host $http_host; proxy_set_header X-NginX-Proxy true; proxy_pass http://ipfs-server/; &#125;&#125; 运行 nsite -e service nginx reload 使用体验本站的 克隆站 使用了星际系统，你可以访问体验。 实际使用效果，和想象中有点差别。第一次连接会花很长时间，经常出现Timeout，但连接成功一次后就飞快了。这是为什么呢？IPFS官方承认，这是他们IPNS服务不完善造成的。前面，我们把ipfs用代名转成ipns，是为了文件升级时，不用再次修改DNS。 然而，ipns寻址需要非常耗时，一般都超过20秒。这和ipfs寻址几乎秒开，形成鲜明对比。IPFS官方网站 因为内容固定，首页地址基本不变，用的是ipfs寻址，所以打开飞快。 所以，如果星际系统不能改善IPNS寻址性能，第一次打开网页会遇到超时，谁愿意等待呢？","link":"/zh/bring-you-to-ipfs/"},{"title":"你好，世界！","text":"我们走起~","link":"/zh/hello-world/"},{"title":"用Minos搭建Hexo全站多语言站点","text":"为了搭建一个Hexo博客，开始了寻找全站多语言之路。看了很多文章，做了很多实验，都没有完美的方案。今天终于搞定了，把教程发上来，供后来者参考。 选择的理由 什么是全站多语言 选择English作为默认语言，同时整站对应自己的母语再来一套的装逼行为，折腾自己不纳税系列，英特纳雄耐尔一定实现，全球大团结万岁。 长斌欢迎访问我的GitHub主页 为什么选择Minos 因为Hexo不是一个多语言内核，虽然官方有i18n插件，但只能给外壳加点翻译，内容还是多语言混杂在一起，更别提一对一的多语言版本了。而Minos很酷啊，关键是最新版提供了多语言的支持。 坎坷的过程趟过的坑 官方i18n插件根配置_config.yml里设置 i18n_dir: :lang，然后可以生成合规的slug，但此时post内容还是多语言混搭的，注意：这个设置Minos也需要。 hexo-generator-i18n这个插件还是不错的，可以把page页双语化，但是对post双语化无能为力，还是因为hexo内核不支持。 hexo-multilingual及其generator系列这是真正改动内核的插件，你得把默认的generator卸掉，但是作者太忙，很多小问题没法处理。另外这个系列插件，默认slug里总有en，很不爽啊。 其他奇巧淫技比如用Hexo建两个独立站点，然后捏合在一起；或者大量改动源代码之类；没去试，不是好办法。 遇到Minos看了很多主题，最后选择了Minos，而不是最多人用的next。因为我对于古典web，希望少一些色彩，少一些图片，用文字说话，Minos胜出。希望有更多的人和我一样，选择Minos。 第一次用Minos时，还不支持多语言。1.0版本已经发布2年多了，正好作者要更新2.0版，有要支持i18n的计划。我前后测试了几天并反馈意见，终于，今天的版本完美实现了全站多语言的功能（post、page、archive、category、tag、search、switcher）。下面我就把搭建心得总结一下。 约定大于配置 我们需要什么是各种个性化的需求，还是简单易用。如果是前者，那么全站多语言任重而道远，很多插件还不支持，你也不能指望Minos来帮你解决所有冲突和缺陷。如果是后者，那恭喜你，用最少的配置就能实现全站多语言了。比如，改动根配置：permalink: :category/:title/，就会造成slug变成/nothing/zh-cn/hello-world/，这就是个性化需求和约定冲突的情况。 我们来约定 使用默认根配置，尽量别突发奇想 12345678910language: - en - zh-cnpermalink: :title/i18n_dir: :langnew_post_name: :title.mdcategory_map: 无他: nothingtag_map: 随笔: anything 安装最少的插件包，注：sass插件需要全局翻墙，或者用cnpm安装 1234567891011121314151617181920&#123; \"name\": \"dengcb.github.io\", \"version\": \"1.0.0\", \"private\": true, \"hexo\": &#123; \"version\": \"3.7.1\" &#125;, \"dependencies\": &#123; \"hexo\": \"^3.7.1\", \"hexo-deployer-git\": \"^0.3.1\", \"hexo-generator-archive\": \"^0.1.5\", \"hexo-generator-category\": \"^0.1.3\", \"hexo-generator-index\": \"^0.2.1\", \"hexo-generator-tag\": \"^0.2.0\", \"hexo-renderer-ejs\": \"^0.3.0\", \"hexo-renderer-marked\": \"^0.3.0\", \"hexo-renderer-sass\": \"^0.3.2\", \"hexo-server\": \"^0.2.0\" &#125;&#125; 在项目根目录下，安装Minos git clone https://github.com/ppoffice/hexo-theme-minos.git themes/minos 在themes/minos目录下，创建配置文件 _config.yml _config.en.yml _config.zh-cn.yml 修改_config.zh-cn.yml，定义站点名称和菜单 123456789# Sitetitle: 长斌# Menumenu: 归档: /zh-cn/archives 分类: /zh-cn/categories 标签: /zh-cn/tags 关于: /zh-cn/about 创建页面，并约定，source目录结构如下 1234567891011_post/ hello-world.md zh-cn/ hello_world.mdabout/ index.mdzh-cn/ about/ index.mdCNAMEfavicon.png 每个post，对应在source/_post/&lt;lang&gt;/目录拷贝一份 每个page，对应在source/&lt;lang&gt;/目录拷贝一份 这就是所谓的约定大于配置，只要按这个目录结构创建页面，就自动完成了全站多语言，无需配置。 渲染、测试、发布，愉快地玩耍吧 1234hexo cleanhexo ghexo s -shexo d 鸣谢 特别感谢Minos作者 ppoffice 设计实现这么好的主题，在我不停提意见的期间，持续修改，最后，完全完美实现了我对hexo主题的所有理想。 接下来，我会写一写，如何把刚刚热乎出炉的网站发布到IPFS星际网络里去。","link":"/zh/hexo-minos-multi-language/"},{"title":"迁移LDAP服务","text":"LDAP是一个树状信息查询系统，主要用于部门人员的统一管理。通常查询次数远大于修改次数，系统稳定了很少去动它。所以迁移一次都要搔头挠腮，记录此文以备用。 安装 在新服务器安装OPENLDAPapt install slapd ldap-utils php-ldap phpldapadmin 在旧服务器查询Suffixslapcat -b cn=config | grep &quot;^dn: olcDatabase=\\|^olcSuffix&quot; 备份 备份configslapcat -b cn=config -l config.ldif 备份databaseslapcat -b dc=dengcb,dc=com -l dengcb.ldif 迁移 恢复config 12345cd /etc/ldapcp -a slapd.d slapd.d.bakrm -rf slapd.d/*slapadd -F slapd.d -b cn=config -l config.ldifchown -R openldap.openldap slapd.d 恢复database 12345678slapcat -b cn=config | grep &quot;^dn: olcDatabase=\\|^olcSuffix\\|^olcDbDirectory&quot;cd /var/libcp -a ldap ldap.bakrm -f ldap/*cd /etc/ldapslapadd -F slapd.d -b dc=dengcb,dc=com -l dengcb.ldifchown openldap.openldap /var/lib/ldap/*/etc/init.d/slapd restart 修改 如果遇到和php7兼容问题，请下载修改过的包替换掉/usr/share/phpldapadmin即可 修改配置文件vi /usr/share/phpldapadmin/config/config.php","link":"/zh/migrate-ldap/"},{"title":"迁移MySQL数据库","text":"MySQL是现在最流行的开源数据库系统，基本上个人或小公司都在用，已经是业界标配。在此记录一次数据库服务器的迁移过程，以备查询和共享。 安装 在新服务器安装MySQLapt install mysql-server-5.7 php7.2-mysql 在新服务器安装phpmyadmin 打开官网下载页面 下载最新版的zip包 解压到/usr/share/phpmyadmin 修改 修改MySQL配置vi /etc/mysql/mysql.conf.d/mysql.cnf 修改phpmyadmin配置https://db.yourdomain.com/setup修改完成后保存为/usr/share/phpmyadmin/config.inc.php 修改root密码MySQL5.7默认root没有密码set password for &#39;root&#39;@&#39;localhost&#39; = password(&#39;123&#39;); 用phpmyadmin登录如果发生错误Access denied for user &#39;root&#39;@&#39;localhost&#39;需要更改root登录模式update mysql.user set plugin = &#39;mysql_native_password&#39; where user = &#39;root&#39;; 记得每次修改后都要刷新权限flush privileges; 备份 备份数据库1mysqldump -uroot -p mydb | bzip2 &gt; /opt/bak/db_mydb_`date +%y_%m_%d`.bz2 迁移 恢复数据库1234bzip2 -d db_mydb.bz2mysql -uroot -puse mydbsource /opt/bak/db_mydb","link":"/zh/migrate-mysql/"},{"title":"GitHub的正确打开方式","text":"开始用GitHub到今天，其实不到一个月。越用越能体会到，就一个字：好用。好东西不能藏着掖着，众乐乐才乐。因为时间短，认识肤浅，很多好东西还没发现，且走且分享吧！ GitHub Git是 Linus（你牛死）老人家的业余作品。2005年，当商业版本管理工具BitKeeper免费版到期时，堂堂Linux开发团队怎能付费呢，于是大神就自己写了一个，直接把版本管理工具带入现代化。 Git很高端大气，一般人学不会，比如我，现在也只会几个简单命令，一直把Git当SVN用。生逢其时，社区的力量爆发，Ruby社区在酒吧里开始策划，GitHub诞生了，2008年到现在，十年，一统江湖。 Desktop 一般用户，比如我，还是用 GitHub Desktop 吧。命令行虽然酷炫，但内功不够，怕伤着经脉。 Pages页 参考 用Minos搭建Hexo全站多语言站点，GitHub提供免费静态空间，可搭建博客或写文档。现在已经支持自定义域名https，👍良心企业！ GitBook 这个项目发展很快，和我早先见过的版本，又进化了。你可以在里面放电子教程，还可以写自己的开发文档。 内联模块 项目里套项目，比如你的项目用了别人的，那就可以建一个指针git submodule add your_submodule_url然后你取到本地时git clone your_project_url --recursive更新git submodule update 私人仓库 新年伊始，好消息就来了。微软旗下的GitHub对个人账户开放了免费私人仓库。 粉、追、赞和分身 粉：喜欢一个人，跟踪他，注意他的一举一动追：喜欢一个物，订阅它，收听它的任何变化赞：表扬一个物，鼓励它，但是不听它的消息分身：克隆羊一只，可以修改，可以pull request给作者","link":"/zh/right-way-to-open-github/"},{"title":"Mac下使用iTerm2连接水木BBS","text":"用macOS的时候，总感觉上BBS很费劲，有人说，用welly啊，我还真没用过。但是平时总是用iTerm2来连服务器，今天就尝试下用它来连连水木的BBS看。 准备工作 升级到10.13.1后，系统找不到telnet了，没关系，可以用brew install telnet来安装，会安装到/usr/local/bin目录下 配置说明打开iTerm2的Preferences-&gt;Profiles 在General栏 点击+，新增一个Profile，继承了Default的设置 修改Name，比如SMTH这样 可以增加一个快捷键，比如^⌘S 修改Command，输入/usr/local/bin/telnet newsmth.net 在Text栏 勾上Treat ambiguous-width characters as double-width 打开Change Font设置适合的大小，字体不用改 Character Spacing里，Horizontal设为90%，Vertical设为80% 在Terminal栏 Character Encoding选Chinese(GBK) 在Session栏 可以勾上When idle, send ASCII code 在Keys栏 点+，Shortcut输入：Home（fn+方向右键），Action输入：Send Escape Sequence，写[1~ 点+，Shortcut输入：End（fn+方向左键），Action输入：Send Escape Sequence，写[4~ 好了，试试愉快的和水母一起玩耍吧！","link":"/zh/use-iterm2-telnet-smth-bbs/"}],"tags":[{"name":"教程","slug":"tutorial","link":"/zh/tags/tutorial/"},{"name":"随笔","slug":"anything","link":"/zh/tags/anything/"}],"categories":[{"name":"网站","slug":"web","link":"/zh/categories/web/"},{"name":"其他","slug":"other","link":"/zh/categories/other/"},{"name":"维护","slug":"maintain","link":"/zh/categories/maintain/"},{"name":"IPFS","slug":"web/ipfs","link":"/zh/categories/web/ipfs/"},{"name":"编码","slug":"coding","link":"/zh/categories/coding/"},{"name":"无他","slug":"other/nothing","link":"/zh/categories/other/nothing/"},{"name":"iTerm","slug":"web/iterm","link":"/zh/categories/web/iterm/"},{"name":"Hexo","slug":"web/hexo","link":"/zh/categories/web/hexo/"},{"name":"LDAP","slug":"maintain/ldap","link":"/zh/categories/maintain/ldap/"},{"name":"MYSQL","slug":"maintain/MYSQL","link":"/zh/categories/maintain/MYSQL/"},{"name":"GitHub","slug":"coding/github","link":"/zh/categories/coding/github/"}]}